{"version":3,"sources":["constants/postConstants.js","constants/userConstants.js","store.js","reducers/postReducers.js","reducers/userReducers.js","actions/userActions.js","components/Header.js","actions/postActions.js","components/Message.js","components/Loader.js","components/UserPostSearch.js","components/Paginate.js","screen/DashboardScreen.js","screen/HomeScreen.js","screen/LoginScreen.js","screen/PostEditScreen.js","screen/PostScreen.js","components/PostSearch.js","components/PostPaginate.js","screen/PostsScreen.js","screen/RegisterScreen.js","App.js","index.js"],"names":["POST_LIST_REQUEST","POST_LIST_SUCCESS","POST_LIST_FAIL","USER_POST_LIST_REQUEST","USER_POST_LIST_SUCCESS","USER_POST_LIST_FAIL","POST_DETAILS_REQUEST","POST_DETAILS_SUCCESS","POST_DETAILS_FAIL","POST_DELETE_REQUEST","POST_DELETE_SUCCESS","POST_DELETE_FAIL","POST_CREATE_REQUEST","POST_CREATE_SUCCESS","POST_CREATE_FAIL","POST_CREATE_RESET","POST_UPDATE_REQUEST","POST_UPDATE_SUCCESS","POST_UPDATE_FAIL","POST_UPDATE_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","reducer","combineReducers","postList","state","posts","action","type","loading","payload","pages","page","error","postDetails","post","userPostList","postDelete","success","postCreate","postUpdate","userLogin","userInfo","userRegister","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","className","to","onClick","listPostDetails","id","a","axios","get","data","response","message","Message","variant","children","Alert","defaultProps","Loader","style","margin","UserPostSearch","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","onChange","target","value","placeholder","Paginate","isAdmin","Array","keys","map","x","DashboardScreen","match","pageNumber","params","loadingCreate","errorCreate","successCreate","createdPost","successDelete","useEffect","_id","getState","config","headers","Authorization","token","userListPosts","deleteHandler","window","confirm","delete","deletePost","name","render","marginTop","length","title","author","format","date","HomeScreen","width","float","marginBottom","LoginScreen","email","setEmail","password","setPassword","redirect","search","split","setItem","stringify","login","textAlign","color","PostEditScreen","postId","setTitle","setAuthor","body","setBody","loadingUpdate","errorUpdate","successUpdate","paddingTop","put","updatePost","rows","PostScreen","fontSize","fontWeight","whiteSpace","PostSearch","PostPaginate","PostsScreen","console","log","listPosts","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","App","Container","path","component","exact","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e9fb3de7.chunk.js","sourcesContent":["export const POST_LIST_REQUEST = \"POST_LIST_REQUEST\";\nexport const POST_LIST_SUCCESS = \"POST_LIST_SUCCESS\";\nexport const POST_LIST_FAIL = \"POST_LIST_FAIL\";\n\nexport const USER_POST_LIST_REQUEST = \"USER_POST_LIST_REQUEST\";\nexport const USER_POST_LIST_SUCCESS = \"USER_POST_LIST_SUCCESS\";\nexport const USER_POST_LIST_FAIL = \"USER_POST_LIST_FAIL\";\n\nexport const POST_DETAILS_REQUEST = \"POST_DETAILS_REQUEST\";\nexport const POST_DETAILS_SUCCESS = \"POST_DETAILS_SUCCESS\";\nexport const POST_DETAILS_FAIL = \"POST_DETAILS_FAIL\";\n\nexport const POST_DELETE_REQUEST = \"POST_DELETE_REQUEST\";\nexport const POST_DELETE_SUCCESS = \"POST_DELETE_SUCCESS\";\nexport const POST_DELETE_FAIL = \"POST_DELETE_FAIL\";\n\nexport const POST_CREATE_REQUEST = \"POST_CREATE_REQUEST\";\nexport const POST_CREATE_SUCCESS = \"POST_CREATE_SUCCESS\";\nexport const POST_CREATE_FAIL = \"POST_CREATE_FAIL\";\nexport const POST_CREATE_RESET = \"POST_CREATE_RESET\";\n\nexport const POST_UPDATE_REQUEST = \"POST_UPDATE_REQUEST\";\nexport const POST_UPDATE_SUCCESS = \"POST_UPDATE_SUCCESS\";\nexport const POST_UPDATE_FAIL = \"POST_UPDATE_FAIL\";\nexport const POST_UPDATE_RESET = \"POST_UPDATE_RESET\";\n","export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const USER_LOGOUT = \"USER_LOGOUT\";\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  postListReducer,\n  userPostListReducer,\n  postDetailsReducer,\n  postDeleteReducer,\n  postCreateReducer,\n  postUpdateReducer,\n} from \"./reducers/postReducers\";\nimport { userLoginReducer, userRegisterReducer } from \"./reducers/userReducers\";\n\nconst reducer = combineReducers({\n  postList: postListReducer,\n  postDetails: postDetailsReducer,\n  userPostList: userPostListReducer,\n  postDelete: postDeleteReducer,\n  postCreate: postCreateReducer,\n  postUpdate: postUpdateReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n});\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\n  : null;\n\nconst initialState = {\n  userLogin: { userInfo: userInfoFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  POST_LIST_REQUEST,\n  POST_LIST_SUCCESS,\n  POST_LIST_FAIL,\n  USER_POST_LIST_REQUEST,\n  USER_POST_LIST_SUCCESS,\n  USER_POST_LIST_FAIL,\n  POST_DETAILS_REQUEST,\n  POST_DETAILS_SUCCESS,\n  POST_DETAILS_FAIL,\n  POST_DELETE_REQUEST,\n  POST_DELETE_SUCCESS,\n  POST_DELETE_FAIL,\n  POST_CREATE_REQUEST,\n  POST_CREATE_SUCCESS,\n  POST_CREATE_FAIL,\n  POST_CREATE_RESET,\n  POST_UPDATE_REQUEST,\n  POST_UPDATE_SUCCESS,\n  POST_UPDATE_FAIL,\n  POST_UPDATE_RESET,\n} from \"../constants/postConstants\";\n\nexport const postListReducer = (state = { posts: [] }, action) => {\n  switch (action.type) {\n    case POST_LIST_REQUEST:\n      return { loading: true, posts: [] };\n    case POST_LIST_SUCCESS:\n      return {\n        loading: false,\n        posts: action.payload.posts,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case POST_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const userPostListReducer = (state = { posts: [] }, action) => {\n  switch (action.type) {\n    case USER_POST_LIST_REQUEST:\n      return { loading: true, posts: [] };\n    case USER_POST_LIST_SUCCESS:\n      return {\n        loading: false,\n        posts: action.payload.posts,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      };\n    case USER_POST_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const postDetailsReducer = (state = { post: {} }, action) => {\n  switch (action.type) {\n    case POST_DETAILS_REQUEST:\n      return { ...state, loading: true };\n    case POST_DETAILS_SUCCESS:\n      return { loading: false, post: action.payload };\n    case POST_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const postDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_DELETE_REQUEST:\n      return { loading: true };\n    case POST_DELETE_SUCCESS:\n      return { loading: false, success: true };\n    case POST_DELETE_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const postCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case POST_CREATE_REQUEST:\n      return { loading: true };\n    case POST_CREATE_SUCCESS:\n      return { loading: false, success: true, post: action.payload };\n    case POST_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const postUpdateReducer = (state = { post: {} }, action) => {\n  switch (action.type) {\n    case POST_UPDATE_REQUEST:\n      return { loading: true };\n    case POST_UPDATE_SUCCESS:\n      return { loading: false, success: true, post: action.payload };\n    case POST_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case POST_UPDATE_RESET:\n      return { post: {} };\n    default:\n      return state;\n  }\n};\n","import { USER_REGISTER_FAIL, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true };\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true };\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload };\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_LOGOUT:\n      return {};\n    default:\n      return state;\n  }\n};\n","import axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users/login\", { email, password }, config);\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({ type: USER_LOGOUT });\n  document.location.href = \"/login\";\n};\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\"/api/users\", { name, email, password }, config);\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n","import React, { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../actions/userActions\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n\n  return (\n    <Fragment>\n      <header>\n        <div className=\"container\">\n          <h1>Blog Website</h1>\n        </div>\n      </header>\n      <nav>\n        <div className=\"container flex-between\">\n          <div className=\"left-nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/posts\">Posts</Link>\n          </div>\n          <div className=\"right-nav\">\n            {userInfo ? (\n              <Fragment>\n                <Link to=\"/dashboard\">Dashboard</Link>\n                <Link to=\"#\" onClick={logoutHandler}>\n                  Logout\n                </Link>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Link to=\"/register\">Register</Link>\n                <Link to=\"/login\">Login</Link>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import axios from \"axios\";\nimport {\n  POST_LIST_REQUEST,\n  POST_LIST_SUCCESS,\n  POST_LIST_FAIL,\n  USER_POST_LIST_REQUEST,\n  USER_POST_LIST_SUCCESS,\n  USER_POST_LIST_FAIL,\n  POST_DETAILS_REQUEST,\n  POST_DETAILS_SUCCESS,\n  POST_DETAILS_FAIL,\n  POST_DELETE_REQUEST,\n  POST_DELETE_SUCCESS,\n  POST_DELETE_FAIL,\n  POST_CREATE_REQUEST,\n  POST_CREATE_SUCCESS,\n  POST_CREATE_FAIL,\n  POST_UPDATE_REQUEST,\n  POST_UPDATE_SUCCESS,\n  POST_UPDATE_FAIL,\n} from \"../constants/postConstants\";\n\nimport { logout } from \"./userActions\";\n\nexport const listPosts =\n  (keyword = \"\", pageNumber = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: POST_LIST_REQUEST });\n\n      const { data } = await axios.get(`/api/posts?keyword=${keyword}&pageNumber=${pageNumber}`);\n\n      dispatch({ type: POST_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: POST_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n      });\n    }\n  };\n\nexport const userListPosts =\n  (keyword = \"\", pageNumber = \"\") =>\n  async (dispatch, getState) => {\n    try {\n      dispatch({ type: USER_POST_LIST_REQUEST });\n\n      const {\n        userLogin: { userInfo },\n      } = getState();\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/posts/user?keyword=${keyword}&pageNumber=${pageNumber}`, config);\n\n      dispatch({ type: USER_POST_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n      if (message === \"Not authorized, token failed\") {\n        dispatch(logout());\n      }\n      dispatch({\n        type: USER_POST_LIST_FAIL,\n        payload: message,\n      });\n    }\n  };\n\nexport const listPostDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: POST_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: POST_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n    });\n  }\n};\n\nexport const deletePost = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_DELETE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`/api/posts/${id}`, config);\n\n    dispatch({\n      type: POST_DELETE_SUCCESS,\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: POST_DELETE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const createPost = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(`/api/posts`, {}, config);\n\n    dispatch({\n      type: POST_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: POST_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const updatePost = (post) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_UPDATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(`/api/posts/${post._id}`, post, config);\n\n    dispatch({\n      type: POST_UPDATE_SUCCESS,\n      payload: data,\n    });\n    dispatch({ type: POST_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: POST_UPDATE_FAIL,\n      payload: message,\n    });\n  }\n};\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import React from \"react\";\n\nconst Loader = () => {\n  return <div className=\"loader\" style={{ margin: \"auto\" }}></div>;\n};\n\nexport default Loader;\n","import React, { useState } from \"react\";\n\nconst UserPostSearch = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/user/post/search/${keyword}`);\n    } else {\n      history.push(\"/dashboard\");\n    }\n  };\n\n  return (\n    <div className=\"search-container\">\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          className=\"\n        search-input\"\n          onChange={(e) => setKeyword(e.target.value)}\n          placeholder=\"Search Your Posts...\"\n        />\n        <button className=\"submit-button\">Search</button>{\" \"}\n      </form>\n    </div>\n  );\n};\n\nexport default UserPostSearch;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\n  return (\n    pages > 1 && (\n      <div className=\"pagination\">\n        {[...Array(pages).keys()].map((x) => (\n          <NavLink\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/dashboard/${x + 1}`\n            }\n          >\n            {x + 1}\n          </NavLink>\n        ))}\n      </div>\n    )\n  );\n};\n\nexport default Paginate;\n","import React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { userListPosts, createPost, deletePost } from \"../actions/postActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { Link, Route } from \"react-router-dom\";\nimport UserPostSearch from \"../components/UserPostSearch\";\nimport Moment from \"react-moment\";\nimport { POST_CREATE_RESET } from \"../constants/postConstants\";\nimport Paginate from \"../components/Paginate\";\n\nconst DashboardScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n  const keyword = match.params.keyword;\n\n  const dispatch = useDispatch();\n\n  const userPostList = useSelector((state) => state.userPostList);\n  const { loading, error, posts, page, pages } = userPostList;\n\n  const postCreate = useSelector((state) => state.postCreate);\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, post: createdPost } = postCreate;\n\n  const postDelete = useSelector((state) => state.postDelete);\n  const { success: successDelete } = postDelete;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    dispatch({ type: POST_CREATE_RESET });\n\n    if (!userInfo) {\n      history.push(\"/login\");\n    }\n\n    if (successCreate) {\n      history.push(`/post/edit/${createdPost._id}`);\n    } else {\n      dispatch(userListPosts(keyword, pageNumber));\n    }\n  }, [dispatch, history, keyword, pageNumber, successCreate, createdPost, userInfo, successDelete]);\n\n  const deleteHandler = (id) => {\n    if (window.confirm(\"Are you sure? This cannot be undone.\")) {\n      dispatch(deletePost(id));\n    }\n  };\n\n  const createPostHandler = () => {\n    dispatch(createPost());\n  };\n\n  return (\n    <Fragment>\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div className=\"container\">\n          <div className=\"dashboard-greeting-container\">\n            <h1>Welcome {userInfo.name}</h1>\n            <Link to=\"#\" onClick={createPostHandler} className=\"create-post-button\">\n              Create Post\n            </Link>\n          </div>\n          <div className=\"dashboard-header-container\">\n            <Route render={({ history }) => <UserPostSearch history={history} />} />\n          </div>\n          <p style={{ marginTop: \"20px\" }}>After Searching, do a blank search to see all your posts again</p>\n          {posts.length === 0 ? (\n            <p>There looks to be no posts! Either your Search couldn't find anything, or you need to start creating posts!</p>\n          ) : (\n            <Fragment>\n              <table className=\"styled-table\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>Author</th>\n                    <th>Date</th>\n                    <th></th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {posts.map((post) => (\n                    <tr key={post._id}>\n                      <td>\n                        <Link to={`/post/${post._id}`} className=\"title-button\">\n                          {post.title}\n                        </Link>\n                      </td>\n                      <td>{post.author}</td>\n                      <td>\n                        <Moment format=\"DD-MM-YYYY\">{post.date}</Moment>\n                      </td>\n                      <td>\n                        <Link to={`/post/edit/${post._id}`} className=\"edit-button\">\n                          EDIT\n                        </Link>\n                      </td>\n                      <td>\n                        <Link to=\"#\" className=\"delete-button\" onClick={() => deleteHandler(post._id)}>\n                          DELETE\n                        </Link>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <Paginate pages={pages} page={page} isAdmin={true} />\n            </Fragment>\n          )}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default DashboardScreen;\n","import React, { Fragment } from \"react\";\n\nconst HomeScreen = () => {\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <div style={{ width: \"600px\", float: \"left\" }}>\n          <h2 style={{ marginTop: \"40px\", marginBottom: \"20px\" }}>How it works.</h2>\n          <p>\n            This websites allow users to register (sign up) and create posts that can be read by other users.\n            <br />\n            <br />\n            This website is built using the MERN Stack. Uses MongoDB as the document database, Express JS for REST API, React JS for the Front-end and NodeJS.\n            <br/>\n\t\t\t<br />\n\t\t\t<a href=\"https://www.google.com/maps?q=-37.55890800,175.91638600\">Click Here Dayne!</a>\n          </p>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { login } from \"../actions/userActions\";\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, userInfo } = userLogin;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/dashboard\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <Fragment>\n      {loading && <Loader />}\n      <div className=\"form-container\">\n        <div className=\"form-header\">\n          <h1 style={{ marginBottom: \"10px\" }}>Login</h1>\n          <p style={{ marginBottom: \"40px\" }}>Already have an exisitng account? Login below</p>\n          {error && <Message variant=\"danger\">{error}</Message>}\n        </div>\n        <form onSubmit={submitHandler}>\n          <p>Email Address</p>\n          <input type=\"text\" className=\"form-input\" placeholder=\"example@example.com\" value={email} onChange={(e) => setEmail(e.target.value)} />\n\n          <p>Password</p>\n          <input type=\"password\" className=\"form-input\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n\n          <button type=\"submit\" className=\"form-button\">\n            Login\n          </button>\n        </form>\n        <p style={{ textAlign: \"center\" }}>\n          Don't have an account?{\" \"}\n          <Link to=\"/register\" style={{ color: \"blue\" }}>\n            Register\n          </Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default LoginScreen;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listPostDetails, updatePost } from \"../actions/postActions\";\nimport { POST_UPDATE_RESET } from \"../constants/postConstants\";\n\nconst PostEditScreen = ({ match, history }) => {\n  const postId = match.params.id;\n\n  const [title, setTitle] = useState(\"\");\n  const [author, setAuthor] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { loading, error, post } = postDetails;\n\n  const postUpdate = useSelector((state) => state.postUpdate);\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = postUpdate;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (successUpdate) {\n        dispatch({ type: POST_UPDATE_RESET });\n        history.push(\"/dashboard\");\n      } else {\n        if (!post.title || post._id !== postId) {\n          dispatch(listPostDetails(postId));\n        } else {\n          setTitle(post.title);\n          setAuthor(post.author);\n          setBody(post.body);\n        }\n      }\n    }\n  }, [dispatch, userInfo, history, postId, post, successUpdate]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      updatePost({\n        _id: postId,\n        title,\n        author,\n        body,\n      })\n    );\n  };\n\n  return (\n    <div className=\"container\" style={{ paddingTop: \"40px\" }}>\n      {loadingUpdate && <Loader />}\n      {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Fragment>\n          <Link to=\"/dashboard\" className=\"back-button\">\n            Go Back\n          </Link>\n          <div className=\"post-form-container\" style={{ marginTop: \"30px\" }}>\n            <div className=\"form-header\">\n              <h1 style={{ marginBottom: \"10px\" }}>Create / Edit a Post</h1>\n            </div>\n\n            <form onSubmit={submitHandler}>\n              <p>Title of Post</p>\n              <input type=\"text\" className=\"form-input\" placeholder=\"Sample Title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n              <p>Author of Post (Doesn't have to be your name)</p>\n              <input type=\"text\" className=\"form-input\" placeholder=\"John Doe\" value={author} onChange={(e) => setAuthor(e.target.value)} />\n              <textarea name=\"body\" className=\"form-input\" rows=\"25\" placeholder=\"Random Sample Text\" value={body} onChange={(e) => setBody(e.target.value)}></textarea>\n              <button type=\"Submit\" className=\"form-button\">\n                Submit\n              </button>\n            </form>\n          </div>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default PostEditScreen;\n","import React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listPostDetails } from \"../actions/postActions\";\nimport Moment from \"react-moment\";\n\nconst PostScreen = ({ match, history }) => {\n  const postId = match.params.id;\n  const dispatch = useDispatch();\n\n  const postDetails = useSelector((state) => state.postDetails);\n  const { loading, error, post } = postDetails;\n\n  useEffect(() => {\n    if (!post || !post.title || post._id !== postId) {\n      dispatch(listPostDetails(postId));\n    }\n  }, [dispatch, post, postId, history]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div className=\"container\">\n          <div style={{ width: \"800px\", marginBottom: \"100px\" }}>\n            <h1 style={{ marginTop: \"80px\", fontSize: \"50pt\" }}>{post.title}</h1>\n            <h3 style={{ fontWeight: \"400\", color: \"#444\", marginTop: \"10px\" }}>{post.author}</h3>\n            <h5 style={{ fontWeight: \"400\", color: \"#444\", marginTop: \"10px\" }}>\n              Date Created: <Moment format=\"DD-MM-YYYY\">{post.date}</Moment>\n            </h5>\n            <p style={{ marginTop: \"100px\", whiteSpace: \"pre-line\" }}>{post.body}</p>\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PostScreen;\n","import React, { useState } from \"react\";\n\nconst PostSearch = ({ history }) => {\n  const [keyword, setKeyword] = useState(\"\");\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (keyword.trim()) {\n      history.push(`/post/search/${keyword}`);\n    } else {\n      history.push(\"/posts\");\n    }\n  };\n\n  return (\n    <div className=\"search-container\">\n      <form onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          className=\"\n        search-input\"\n          onChange={(e) => setKeyword(e.target.value)}\n          placeholder=\"Search Your Posts...\"\n        />\n        <button className=\"submit-button\">Search</button>{\" \"}\n      </form>\n    </div>\n  );\n};\n\nexport default PostSearch;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst PostPaginate = ({ pages, page, isAdmin = false, keyword = \"\" }) => {\n  return (\n    pages > 1 && (\n      <div className=\"pagination\">\n        {[...Array(pages).keys()].map((x) => (\n          <NavLink key={x + 1} to={!isAdmin ? (keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`) : `/posts/${x + 1}`}>\n            {x + 1}\n          </NavLink>\n        ))}\n      </div>\n    )\n  );\n};\n\nexport default PostPaginate;\n","import React, { Fragment, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listPosts } from \"../actions/postActions\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { Link, Route } from \"react-router-dom\";\nimport PostSearch from \"../components/PostSearch\";\nimport Moment from \"react-moment\";\nimport PostPaginate from \"../components/PostPaginate\";\n\nconst PostsScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1;\n  const keyword = match.params.keyword;\n\n  const dispatch = useDispatch();\n\n  const postList = useSelector((state) => state.postList);\n  const { loading, error, posts, page, pages } = postList;\n\n  console.log(posts);\n\n  useEffect(() => {\n    dispatch(listPosts(keyword, pageNumber));\n  }, [dispatch, history, keyword, pageNumber]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <div className=\"container\">\n          <h1 style={{ marginTop: \"40px\", marginBottom: \"10px\" }}>Posts</h1>\n          <p>Here you will see posts that have been created by other users, for you to read here.</p>\n          <div className=\"dashboard-header-container\">\n            <Route render={({ history }) => <PostSearch history={history} />} />\n          </div>\n          <p style={{ marginTop: \"20px\" }}>After Searching, do a blank search to see all your posts again</p>\n          {posts.length === 0 ? (\n            <p>There looks to be no posts! Either your Search couldn't find anything, or you need to start creating posts!</p>\n          ) : (\n            <Fragment>\n              <table className=\"styled-table\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>Author</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {posts.map((post) => (\n                    <tr key={post._id}>\n                      <td>\n                        <Link to={`/post/${post._id}`} className=\"title-button\">\n                          {post.title}\n                        </Link>\n                      </td>\n                      <td>{post.author}</td>\n                      <td>\n                        <Moment format=\"DD-MM-YYYY\">{post.date}</Moment>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <PostPaginate pages={pages} page={page} isAdmin={true} />\n            </Fragment>\n          )}\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default PostsScreen;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { register } from \"../actions/userActions\";\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userRegister = useSelector((state) => state.userRegister);\n  const { loading, error, userInfo } = userRegister;\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/dashboard\";\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return (\n    <Fragment>\n      {loading && <Loader />}\n\n      <div className=\"form-container\">\n        <div className=\"form-header\">\n          <h1 style={{ marginBottom: \"10px\" }}>Register</h1>\n          <p style={{ marginBottom: \"40px\" }}>Fill in the form below to create an account</p>\n          {message && <Message variant=\"danger\">{message}</Message>}\n          {error && <Message variant=\"danger\">{error}</Message>}\n        </div>\n        <form onSubmit={submitHandler}>\n          <p>Full Name</p>\n          <input type=\"text\" className=\"form-input\" placeholder=\"John Doe\" value={name} onChange={(e) => setName(e.target.value)} />\n          <p>Email Address</p>\n          <input type=\"text\" className=\"form-input\" placeholder=\"example@example.com\" value={email} onChange={(e) => setEmail(e.target.value)} />\n\n          <p>Password</p>\n          <input type=\"password\" className=\"form-input\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n\n          <p>Re-Enter Password</p>\n          <input type=\"password\" className=\"form-input\" placeholder=\"Re-Enter Password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} />\n\n          <button type=\"submit\" className=\"form-button\">\n            Login\n          </button>\n        </form>\n        <p style={{ textAlign: \"center\" }}>\n          Don't have an account?{\" \"}\n          <Link to=\"/register\" style={{ color: \"blue\" }}>\n            Register\n          </Link>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RegisterScreen;\n","import { Container } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport DashboardScreen from \"./screen/DashboardScreen\";\nimport HomeScreen from \"./screen/HomeScreen\";\nimport LoginScreen from \"./screen/LoginScreen\";\nimport PostEditScreen from \"./screen/PostEditScreen\";\nimport PostScreen from \"./screen/PostScreen\";\nimport PostsScreen from \"./screen/PostsScreen\";\nimport RegisterScreen from \"./screen/RegisterScreen\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <div className=\"py-3\">\n        <Container>\n          <Route path=\"/\" component={HomeScreen} exact />\n          <Route path=\"/login\" component={LoginScreen} />\n          <Route path=\"/user/post/search/:keyword\" component={DashboardScreen} exact />\n          <Route path=\"/post/:id\" component={PostScreen} exact />\n          <Route path=\"/posts\" component={PostsScreen} exact />\n          <Route path=\"/post/search/:keyword\" component={PostsScreen} exact />\n          <Route path=\"/posts/:pageNumber\" component={PostsScreen} />\n          <Route path=\"/dashboard\" component={DashboardScreen} exact />\n          <Route path=\"/dashboard/:pageNumber\" component={DashboardScreen} />\n          <Route path=\"/register\" component={RegisterScreen} />\n          <Route path=\"/post/edit/:id\" component={PostEditScreen} />\n        </Container>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport store from \"./store\";\nimport App from \"./App\";\n\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}